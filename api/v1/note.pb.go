//
//Copyright 2017 Aspen Mesh Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api/v1/note.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NoteLevel indicates the severity level of the note
type NoteLevel int32

const (
	NoteLevel_UNUSED  NoteLevel = 0 // useful for skipping empty (0) value
	NoteLevel_INFO    NoteLevel = 1
	NoteLevel_WARNING NoteLevel = 2
	NoteLevel_ERROR   NoteLevel = 3
)

// Enum value maps for NoteLevel.
var (
	NoteLevel_name = map[int32]string{
		0: "UNUSED",
		1: "INFO",
		2: "WARNING",
		3: "ERROR",
	}
	NoteLevel_value = map[string]int32{
		"UNUSED":  0,
		"INFO":    1,
		"WARNING": 2,
		"ERROR":   3,
	}
)

func (x NoteLevel) Enum() *NoteLevel {
	p := new(NoteLevel)
	*p = x
	return p
}

func (x NoteLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoteLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_note_proto_enumTypes[0].Descriptor()
}

func (NoteLevel) Type() protoreflect.EnumType {
	return &file_api_v1_note_proto_enumTypes[0]
}

func (x NoteLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NoteLevel.Descriptor instead.
func (NoteLevel) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_note_proto_rawDescGZIP(), []int{0}
}

// Vetters use Info to provide their information
type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the vetter
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Semver string of the vetter
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_note_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_note_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_api_v1_note_proto_rawDescGZIP(), []int{0}
}

func (x *Info) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Info) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Vetters generate Notes after inspecting the mesh configuration
type Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MD5 checksum of the generated note
	//
	// Used as UUID for notes
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Type of the note
	//
	// Example "istio-component-mismatch", "missing-service-port-prefix"
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Short description of the note
	//
	// Summary may contain python template strings "${var}" which will be
	// substituted from values in Attr map described below. Summary
	// should only refer to template variables present in Attr map.
	Summary string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	// Long description of the note
	//
	// Similar to Summary, Msg can contain python template strings "${var}" which
	// will be substituted from values in Attr map described below. Msg
	// should only refer to template variables present in Attr map.
	Msg string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	// Severity of the note
	Level NoteLevel `protobuf:"varint,5,opt,name=level,proto3,enum=istio.vet.v1.NoteLevel" json:"level,omitempty"`
	// Map of template variables which can be used by Summary and Msg
	Attr map[string]string `protobuf:"bytes,6,rep,name=attr,proto3" json:"attr,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Note) Reset() {
	*x = Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_note_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_note_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_api_v1_note_proto_rawDescGZIP(), []int{1}
}

func (x *Note) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Note) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Note) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Note) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Note) GetLevel() NoteLevel {
	if x != nil {
		return x.Level
	}
	return NoteLevel_UNUSED
}

func (x *Note) GetAttr() map[string]string {
	if x != nil {
		return x.Attr
	}
	return nil
}

var File_api_v1_note_proto protoreflect.FileDescriptor

var file_api_v1_note_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x76, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x22, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0xf0, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x69, 0x73,
	0x74, 0x69, 0x6f, 0x2e, 0x76, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x61,
	0x74, 0x74, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x73, 0x74, 0x69,
	0x6f, 0x2e, 0x76, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x1a, 0x37, 0x0a,
	0x09, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x39, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x55, 0x53, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x03, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x73, 0x70, 0x65, 0x6e, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2d,
	0x76, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_v1_note_proto_rawDescOnce sync.Once
	file_api_v1_note_proto_rawDescData = file_api_v1_note_proto_rawDesc
)

func file_api_v1_note_proto_rawDescGZIP() []byte {
	file_api_v1_note_proto_rawDescOnce.Do(func() {
		file_api_v1_note_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_note_proto_rawDescData)
	})
	return file_api_v1_note_proto_rawDescData
}

var file_api_v1_note_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_note_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_v1_note_proto_goTypes = []interface{}{
	(NoteLevel)(0), // 0: istio.vet.v1.NoteLevel
	(*Info)(nil),   // 1: istio.vet.v1.Info
	(*Note)(nil),   // 2: istio.vet.v1.Note
	nil,            // 3: istio.vet.v1.Note.AttrEntry
}
var file_api_v1_note_proto_depIdxs = []int32{
	0, // 0: istio.vet.v1.Note.level:type_name -> istio.vet.v1.NoteLevel
	3, // 1: istio.vet.v1.Note.attr:type_name -> istio.vet.v1.Note.AttrEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_v1_note_proto_init() }
func file_api_v1_note_proto_init() {
	if File_api_v1_note_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_note_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_note_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_note_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_note_proto_goTypes,
		DependencyIndexes: file_api_v1_note_proto_depIdxs,
		EnumInfos:         file_api_v1_note_proto_enumTypes,
		MessageInfos:      file_api_v1_note_proto_msgTypes,
	}.Build()
	File_api_v1_note_proto = out.File
	file_api_v1_note_proto_rawDesc = nil
	file_api_v1_note_proto_goTypes = nil
	file_api_v1_note_proto_depIdxs = nil
}
