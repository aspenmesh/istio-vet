/*
Copyright 2017 Aspen Mesh Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package istio.vet.v1;
option go_package = "github.com/aspenmesh/istio-vet/api/v1";

// Vetters use Info to provide their information
message Info {
  // Name of the vetter
  string id = 1;

  // Semver string of the vetter
  string version = 2;
}

// NoteLevel indicates the severity level of the note
enum NoteLevel {
  UNUSED = 0; // useful for skipping empty (0) value
  INFO = 1;
  WARNING = 2;
  ERROR = 3;
}

// Vetters generate Notes after inspecting the mesh configuration
message Note {
  // MD5 checksum of the generated note
  //
  // Used as UUID for notes
  string id = 1;

  // Type of the note
  //
  // Example "istio-component-mismatch", "missing-service-port-prefix"
  string type = 2;

  // Short description of the note
  //
  // Summary may contain python template strings "${var}" which will be
  // substituted from values in Attr map described below. Summary
  // should only refer to template variables present in Attr map.
  string summary = 3;

  // Long description of the note
  //
  // Similar to Summary, Msg can contain python template strings "${var}" which
  // will be substituted from values in Attr map described below. Msg
  // should only refer to template variables present in Attr map.
  string msg = 4;

  // Severity of the note
  NoteLevel level = 5;

  // Map of template variables which can be used by Summary and Msg
  map<string, string> attr = 6;
}

